# Generated by Django 5.1.6 on 2025-03-09 18:43

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_number', models.IntegerField(blank=True, null=True)),
                ('store_receiving_voucher', models.CharField(blank=True, max_length=30, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('total_purchased_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_items', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='units', to='inventory.unit')),
            ],
        ),
        migrations.CreateModel(
            name='ReStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity_purchased', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('invoice_number', models.IntegerField(blank=True, null=True)),
                ('store_receiving_voucher', models.CharField(blank=True, max_length=30, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
                ('restocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_restocking', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restock_items', to='inventory.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_to', models.CharField(blank=True, choices=[('A&E SPINE', 'A&E SPINE'), ('A&E THEATRE', 'A&E THEATRE'), ('A&E TRAUMA', 'A&E TRAUMA'), ('ACTU', 'ACTU'), ('ACUTE BURNS UNIT', 'ACUTE BURNS UNIT'), ('AMENITIY WARD', 'AMENITIY WARD'), ('AMINU DANTATA WARD', 'AMINU DANTATA WARD'), ('ANAESTHESIA', 'ANAESTHESIA'), ('APPOINTMENT AND PROMOTION', 'APPOINTMENT AND PROMOTION'), ('BILLING ACCOUNT', 'BILLING ACCOUNT'), ('BIO-MEDICAL ENGR', 'BIO-MEDICAL ENGR'), ('BOARD SECTION', 'BOARD SECTION'), ('BURNS AND PLASTIC UNIT', 'BURNS AND PLASTIC UNIT'), ('CASH OFFICE', 'CASH OFFICE'), ('CATERING', 'CATERING'), ('CHILDRENS WARD', 'CHILDRENS WARD'), ('CLINICAL SERVICES', 'CLINICAL SERVICES'), ('COMMERCIAL CATERING', 'COMMERCIAL CATERING'), ('COMPOUND OFFICE', 'COMPOUND OFFICE'), ('CSSU', 'CSSU'), ('GENERAL ADMIN', 'GENERAL ADMIN'), ("DA's OFFICE", "DA's OFFICE"), ("DDA's (ACCOUNT)", "DDA's (ACCOUNT)"), ('DISCIPLINE', 'DISCIPLINE'), ('ENGINEERING', 'ENGINEERING'), ('FEMALE WARD', 'FEMALE WARD'), ('FINAL ACCOUNT', 'FINAL ACCOUNT'), ('HAEMODIALYSIS', 'HAEMODIALYSIS'), ('ICU', 'ICU'), ('INFORMATION TECHNOLOGY UNIT', 'INFORMATION TECHNOLOGY UNIT'), ('INTERNAL AUDIT', 'INTERNAL AUDIT'), ('INPLANT STORE', 'INPLANT STORE'), ('JUNIOR STAFF', 'JUNIOR STAFF'), ('LAUNDRY', 'LAUNDRY'), ('MAIN POWER', 'MAIN POWER'), ('THEATRE SIDE', 'THEATRE SIDE'), ('SOPD SIDE', 'SOPD SIDE'), ('TRANSPORT DEPARTMENT', 'TRANSPORT DEPARTMENT'), ("MEDICAL DIRECTOR'S HOUSE", "MEDICAL DIRECTOR'S HOUSE"), ('LEGAL UNIT', 'LEGAL UNIT'), ('MAIN OPERATING THEATRE', 'MAIN OPERATING THEATRE'), ('MALE WARD 1', 'MALE WARD 1'), ('MALE WARD 2', 'MALE WARD 2'), ('MAXILLOFACIAL', 'MAXILLOFACIAL'), ("MD's OFFICE", "MD's OFFICE"), ('MEDICAL ILLUSTRATION', 'MEDICAL ILLUSTRATION'), ('MEDICAL LIBRARY', 'MEDICAL LIBRARY'), ('MEDICAL RECORD', 'MEDICAL RECORD'), ('MEDICAL SOCIAL WELFARE', 'MEDICAL SOCIAL WELFARE'), ('MSSD', 'MSSD'), ('NHIA (E.C.G)', 'NHIA (E.C.G)'), ('NHIA SECRETARY', 'NHIA SECRETARY'), ('NHIA', 'NHIA'), ('NURSING EDUCATION', 'NURSING EDUCATION'), ('NURSING SERVICES', 'NURSING SERVICES'), ('O&G THEATRE', 'O&G THEATRE'), ('O&G UNIT', 'O&G UNIT'), ('OCCUPATIONAL THERAPHY', 'OCCUPATIONAL THERAPHY'), ('ORTHOPAEDIC CAST', 'ORTHOPAEDIC CAST'), ('ORTHOPAEDIC CONSULTANT', 'ORTHOPAEDIC CONSULTANT'), ('ORTHOPAEDIC UNIT', 'ORTHOPAEDIC UNIT'), ('OXYGEN PLANT', 'OXYGEN PLANT'), ('P & O (ICRC)', 'P & O (ICRC)'), ('PATHOLOGY', 'PATHOLOGY'), ('PAYROLL', 'PAYROLL'), ('PENSION AND STAFF WELFARE', 'PENSION AND STAFF WELFARE'), ('PERSONNEL', 'PERSONNEL'), ('PHARMACY', 'PHARMACY'), ('PHYSIOTHERAPHY', 'PHYSIOTHERAPHY'), ('PLANNING UNIT', 'PLANNING UNIT'), ('PROCUMENT', 'PROCUMENT'), ('PROSTHETIC AND OTHOTICS', 'PROSTHETIC AND OTHOTICS'), ('PROTOCOL UNIT', 'PROTOCOL UNIT'), ('PUBLIC HEALTH', 'PUBLIC HEALTH'), ('RADIOLOGY', 'RADIOLOGY'), ('RET', 'RET'), ('REVENUE', 'REVENUE'), ('REGISTRY', 'REGISTRY'), ('SCHOOL OF P AND O', 'SCHOOL OF P AND O'), ('SCHOOL CONTINUOUS EDUCATION', 'SCHOOL CONTINUOUS EDUCATION'), ('SECURITY OFFICE', 'SECURITY OFFICE'), ('SENIOR STAFF', 'SENIOR STAFF'), ('SERVICOM', 'SERVICOM'), ('SOCAST', 'SOCAST'), ('S.O.P.D', 'S.O.P.D'), ('SPINE COMPLEX', 'SPINE COMPLEX'), ('SPINE EXTENSION', 'SPINE EXTENSION'), ('SPINE OPD', 'SPINE OPD'), ('SPINE WARD', 'SPINE WARD'), ('STORE AND SUPPLIES', 'STORE AND SUPPLIES'), ('TELEPHONE', 'TELEPHONE'), ('TRANSPORT', 'TRANSPORT'), ('TAILORING UNIT', 'TAILORING UNIT')], max_length=100, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_issued', models.DateField(auto_now_add=True, null=True)),
                ('siv', models.CharField(blank=True, max_length=30, null=True)),
                ('requisition_number', models.CharField(blank=True, max_length=30, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to='inventory.item')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to='inventory.unit')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalReStock',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity_purchased', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('invoice_number', models.IntegerField(blank=True, null=True)),
                ('store_receiving_voucher', models.CharField(blank=True, max_length=30, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('purchase_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('restocked_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.item')),
                ('unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.unit')),
            ],
            options={
                'verbose_name': 'historical re stock',
                'verbose_name_plural': 'historical re stocks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRecord',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('issued_to', models.CharField(blank=True, choices=[('A&E SPINE', 'A&E SPINE'), ('A&E THEATRE', 'A&E THEATRE'), ('A&E TRAUMA', 'A&E TRAUMA'), ('ACTU', 'ACTU'), ('ACUTE BURNS UNIT', 'ACUTE BURNS UNIT'), ('AMENITIY WARD', 'AMENITIY WARD'), ('AMINU DANTATA WARD', 'AMINU DANTATA WARD'), ('ANAESTHESIA', 'ANAESTHESIA'), ('APPOINTMENT AND PROMOTION', 'APPOINTMENT AND PROMOTION'), ('BILLING ACCOUNT', 'BILLING ACCOUNT'), ('BIO-MEDICAL ENGR', 'BIO-MEDICAL ENGR'), ('BOARD SECTION', 'BOARD SECTION'), ('BURNS AND PLASTIC UNIT', 'BURNS AND PLASTIC UNIT'), ('CASH OFFICE', 'CASH OFFICE'), ('CATERING', 'CATERING'), ('CHILDRENS WARD', 'CHILDRENS WARD'), ('CLINICAL SERVICES', 'CLINICAL SERVICES'), ('COMMERCIAL CATERING', 'COMMERCIAL CATERING'), ('COMPOUND OFFICE', 'COMPOUND OFFICE'), ('CSSU', 'CSSU'), ('GENERAL ADMIN', 'GENERAL ADMIN'), ("DA's OFFICE", "DA's OFFICE"), ("DDA's (ACCOUNT)", "DDA's (ACCOUNT)"), ('DISCIPLINE', 'DISCIPLINE'), ('ENGINEERING', 'ENGINEERING'), ('FEMALE WARD', 'FEMALE WARD'), ('FINAL ACCOUNT', 'FINAL ACCOUNT'), ('HAEMODIALYSIS', 'HAEMODIALYSIS'), ('ICU', 'ICU'), ('INFORMATION TECHNOLOGY UNIT', 'INFORMATION TECHNOLOGY UNIT'), ('INTERNAL AUDIT', 'INTERNAL AUDIT'), ('INPLANT STORE', 'INPLANT STORE'), ('JUNIOR STAFF', 'JUNIOR STAFF'), ('LAUNDRY', 'LAUNDRY'), ('MAIN POWER', 'MAIN POWER'), ('THEATRE SIDE', 'THEATRE SIDE'), ('SOPD SIDE', 'SOPD SIDE'), ('TRANSPORT DEPARTMENT', 'TRANSPORT DEPARTMENT'), ("MEDICAL DIRECTOR'S HOUSE", "MEDICAL DIRECTOR'S HOUSE"), ('LEGAL UNIT', 'LEGAL UNIT'), ('MAIN OPERATING THEATRE', 'MAIN OPERATING THEATRE'), ('MALE WARD 1', 'MALE WARD 1'), ('MALE WARD 2', 'MALE WARD 2'), ('MAXILLOFACIAL', 'MAXILLOFACIAL'), ("MD's OFFICE", "MD's OFFICE"), ('MEDICAL ILLUSTRATION', 'MEDICAL ILLUSTRATION'), ('MEDICAL LIBRARY', 'MEDICAL LIBRARY'), ('MEDICAL RECORD', 'MEDICAL RECORD'), ('MEDICAL SOCIAL WELFARE', 'MEDICAL SOCIAL WELFARE'), ('MSSD', 'MSSD'), ('NHIA (E.C.G)', 'NHIA (E.C.G)'), ('NHIA SECRETARY', 'NHIA SECRETARY'), ('NHIA', 'NHIA'), ('NURSING EDUCATION', 'NURSING EDUCATION'), ('NURSING SERVICES', 'NURSING SERVICES'), ('O&G THEATRE', 'O&G THEATRE'), ('O&G UNIT', 'O&G UNIT'), ('OCCUPATIONAL THERAPHY', 'OCCUPATIONAL THERAPHY'), ('ORTHOPAEDIC CAST', 'ORTHOPAEDIC CAST'), ('ORTHOPAEDIC CONSULTANT', 'ORTHOPAEDIC CONSULTANT'), ('ORTHOPAEDIC UNIT', 'ORTHOPAEDIC UNIT'), ('OXYGEN PLANT', 'OXYGEN PLANT'), ('P & O (ICRC)', 'P & O (ICRC)'), ('PATHOLOGY', 'PATHOLOGY'), ('PAYROLL', 'PAYROLL'), ('PENSION AND STAFF WELFARE', 'PENSION AND STAFF WELFARE'), ('PERSONNEL', 'PERSONNEL'), ('PHARMACY', 'PHARMACY'), ('PHYSIOTHERAPHY', 'PHYSIOTHERAPHY'), ('PLANNING UNIT', 'PLANNING UNIT'), ('PROCUMENT', 'PROCUMENT'), ('PROSTHETIC AND OTHOTICS', 'PROSTHETIC AND OTHOTICS'), ('PROTOCOL UNIT', 'PROTOCOL UNIT'), ('PUBLIC HEALTH', 'PUBLIC HEALTH'), ('RADIOLOGY', 'RADIOLOGY'), ('RET', 'RET'), ('REVENUE', 'REVENUE'), ('REGISTRY', 'REGISTRY'), ('SCHOOL OF P AND O', 'SCHOOL OF P AND O'), ('SCHOOL CONTINUOUS EDUCATION', 'SCHOOL CONTINUOUS EDUCATION'), ('SECURITY OFFICE', 'SECURITY OFFICE'), ('SENIOR STAFF', 'SENIOR STAFF'), ('SERVICOM', 'SERVICOM'), ('SOCAST', 'SOCAST'), ('S.O.P.D', 'S.O.P.D'), ('SPINE COMPLEX', 'SPINE COMPLEX'), ('SPINE EXTENSION', 'SPINE EXTENSION'), ('SPINE OPD', 'SPINE OPD'), ('SPINE WARD', 'SPINE WARD'), ('STORE AND SUPPLIES', 'STORE AND SUPPLIES'), ('TELEPHONE', 'TELEPHONE'), ('TRANSPORT', 'TRANSPORT'), ('TAILORING UNIT', 'TAILORING UNIT')], max_length=100, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_issued', models.DateField(blank=True, editable=False, null=True)),
                ('siv', models.CharField(blank=True, max_length=30, null=True)),
                ('requisition_number', models.CharField(blank=True, max_length=30, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issued_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.item')),
                ('unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.unit')),
            ],
            options={
                'verbose_name': 'historical record',
                'verbose_name_plural': 'historical records',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
